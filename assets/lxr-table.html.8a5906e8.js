import{_ as r,h as s,o as u,a as k,b as a,f as n,w as i,F as b,g as p,i as t}from"./app.a322d2ea.js";const d={},m=n("h1",{id:"lxrtable",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#lxrtable","aria-hidden":"true"},"#"),p(" LxrTable")],-1),g=n("h2",{id:"example-1-simple-with-sorting",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#example-1-simple-with-sorting","aria-hidden":"true"},"#"),p(" Example 1: Simple, with sorting")],-1),y=t(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-[200px] w-full<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lxr-table</span>\r
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sortedRows<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">:sort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sort<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">@sort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sort = $event<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\r
\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> unref<span class="token punctuation">,</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> LxrTable<span class="token punctuation">,</span> LxrColumn<span class="token punctuation">,</span> LxrTableSort <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lxr-ui&#39;</span>\r
<span class="token keyword">import</span> Chance <span class="token keyword">from</span> <span class="token string">&#39;chance&#39;</span>\r
\r
<span class="token keyword">const</span> chance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">interface</span> <span class="token class-name">Row</span> <span class="token punctuation">{</span>\r
  <span class="token literal-property property">name</span><span class="token operator">:</span> string\r
  <span class="token literal-property property">jobTitle</span><span class="token operator">:</span> string\r
  <span class="token literal-property property">country</span><span class="token operator">:</span> string\r
<span class="token punctuation">}</span>\r
\r
<span class="token keyword">const</span> <span class="token function-variable function">generateRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\r
  <span class="token literal-property property">name</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
  <span class="token literal-property property">jobTitle</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">profession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
  <span class="token literal-property property">country</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">country</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">full</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token function-variable function">generateRows</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">count</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>generateRow<span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token literal-property property">columns</span><span class="token operator">:</span> LxrColumn<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;jobTitle&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Job Title&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;country&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Country&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">sortable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>\r
<span class="token punctuation">]</span>\r
\r
<span class="token keyword">const</span> sort <span class="token operator">=</span> ref<span class="token operator">&lt;</span><span class="token keyword">null</span> <span class="token operator">|</span> LxrTableSort<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\r
<span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token function">generateRows</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> sortedRows <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">unref</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> rows\r
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>key<span class="token punctuation">,</span> asc<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token function">unref</span><span class="token punctuation">(</span>sort<span class="token punctuation">)</span><span class="token punctuation">)</span>\r
  <span class="token keyword">const</span> sortingFactor <span class="token operator">=</span> asc <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>\r
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>rows<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token punctuation">[</span>key <span class="token keyword">as</span> keyof Row<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">A</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key <span class="token keyword">as</span> keyof Row<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">B</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">A</span> <span class="token operator">&gt;</span> <span class="token constant">B</span> <span class="token operator">?</span> sortingFactor <span class="token operator">:</span> <span class="token constant">A</span> <span class="token operator">&lt;</span> <span class="token constant">B</span> <span class="token operator">?</span> <span class="token operator">-</span>sortingFactor <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="example-2-custom-cells" tabindex="-1"><a class="header-anchor" href="#example-2-custom-cells" aria-hidden="true">#</a> Example 2: Custom cells</h2>`,2),h=t(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex text-gray-700 w-full mb-2 text-xs italic<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\r
      Selected:\r
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>font-bold ml-1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{selectedRow?.name ?? &#39;none&#39;}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-[200px]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\r
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lxr-table</span>\r
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">@selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickHandler<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\r
\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> unref<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> LxrTable<span class="token punctuation">,</span> LxrColumn<span class="token punctuation">,</span> LxrTableSort <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lxr-ui&#39;</span>\r
<span class="token keyword">import</span> Chance <span class="token keyword">from</span> <span class="token string">&#39;chance&#39;</span>\r
<span class="token keyword">import</span> ActionsCellComponent <span class="token keyword">from</span> <span class="token string">&#39;./ActionsCellComponent.vue&#39;</span>\r
\r
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Row</span> <span class="token punctuation">{</span>\r
  <span class="token literal-property property">name</span><span class="token operator">:</span> string\r
  <span class="token literal-property property">jobTitle</span><span class="token operator">:</span> string\r
  <span class="token literal-property property">country</span><span class="token operator">:</span> string\r
<span class="token punctuation">}</span>\r
\r
<span class="token keyword">const</span> chance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> generateRow <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">Row</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\r
  <span class="token literal-property property">name</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
  <span class="token literal-property property">jobTitle</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">profession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
  <span class="token literal-property property">country</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">country</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">full</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token function-variable function">generateRows</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">count</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>generateRow<span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> selectedRow <span class="token operator">=</span> ref<span class="token operator">&lt;</span>Row <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token literal-property property">columns</span><span class="token operator">:</span> LxrColumn<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;jobTitle&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Job Title&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;actions&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">component</span><span class="token operator">:</span> ActionsCellComponent<span class="token punctuation">,</span> <span class="token function-variable function">extraProps</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">selectedRow</span><span class="token operator">:</span> <span class="token function">unref</span><span class="token punctuation">(</span>selectedRow<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>\r
<span class="token punctuation">]</span>\r
\r
<span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token function">generateRows</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token function-variable function">clickHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">row</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> selectedRow<span class="token punctuation">.</span>value <span class="token operator">=</span> row<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token function">unref</span><span class="token punctuation">(</span>selectedRow<span class="token punctuation">)</span><span class="token operator">?.</span>name <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> row <span class="token punctuation">}</span>\r
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><h3 id="actionscellcomponent-vue" tabindex="-1"><a class="header-anchor" href="#actionscellcomponent-vue" aria-hidden="true">#</a> ActionsCellComponent.vue</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\r
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex justify-center py-0.5<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>\r
      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>transition-colors px-1 rounded border w-[70px]<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{\r
        <span class="token punctuation">&#39;</span>bg-yellow-100 hover:bg-yellow-200 border-yellow-300<span class="token punctuation">&#39;</span>: selectedRow?.name === row.name,\r
        <span class="token punctuation">&#39;</span>bg-green-100 hover:bg-green-200 border-green-300<span class="token punctuation">&#39;</span>: selectedRow?.name !== row.name\r
      }<span class="token punctuation">&quot;</span></span>\r
        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>emit(<span class="token punctuation">&#39;</span>selected<span class="token punctuation">&#39;</span>, row)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\r
        {{ selectedRow?.name === row?.name ? &#39;Selected&#39; : &#39;Click me&#39; }}\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\r
\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> Row <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./LxrTableExample2.vue&#39;</span>\r
defineProps<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token literal-property property">row</span><span class="token operator">:</span> Row<span class="token punctuation">,</span> <span class="token literal-property property">emit</span><span class="token operator">:</span> any<span class="token punctuation">,</span> <span class="token literal-property property">selectedRow</span><span class="token operator">:</span> Row <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="example-3-infinite-scroll" tabindex="-1"><a class="header-anchor" href="#example-3-infinite-scroll" aria-hidden="true">#</a> Example 3: Infinite scroll</h2>`,4),w=t(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>h-[200px]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\r
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lxr-table</span>\r
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">:rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rows<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">threshold</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>30%<span class="token punctuation">&quot;</span></span>\r
      <span class="token attr-name">:fetch-more-callback</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fetchMoreCallback<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\r
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\r
\r
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\r
<span class="token keyword">import</span> <span class="token punctuation">{</span> LxrTable<span class="token punctuation">,</span> LxrColumn<span class="token punctuation">,</span> LxrTableSort <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lxr-ui&#39;</span>\r
<span class="token keyword">import</span> Chance <span class="token keyword">from</span> <span class="token string">&#39;chance&#39;</span>\r
\r
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Row</span> <span class="token punctuation">{</span>\r
  <span class="token literal-property property">name</span><span class="token operator">:</span> string\r
  <span class="token literal-property property">jobTitle</span><span class="token operator">:</span> string\r
  <span class="token literal-property property">country</span><span class="token operator">:</span> string\r
<span class="token punctuation">}</span>\r
\r
<span class="token keyword">const</span> chance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Chance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> generateRow <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">Row</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\r
  <span class="token literal-property property">name</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
  <span class="token literal-property property">jobTitle</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">profession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r
  <span class="token literal-property property">country</span><span class="token operator">:</span> chance<span class="token punctuation">.</span><span class="token function">country</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">full</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\r
<span class="token punctuation">}</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token function-variable function">generateRows</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">count</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>generateRow<span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token literal-property property">columns</span><span class="token operator">:</span> LxrColumn<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Name&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\r
  <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;jobTitle&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;Job Title&#39;</span> <span class="token punctuation">}</span>\r
<span class="token punctuation">]</span>\r
\r
<span class="token keyword">const</span> rows <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token function">generateRows</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r
\r
<span class="token keyword">const</span> <span class="token function-variable function">fetchMoreCallback</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\r
      rows<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">generateRows</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\r
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\r
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\r
  <span class="token punctuation">}</span><span class="token punctuation">)</span>\r
<span class="token punctuation">}</span>\r
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\r
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,2),f=n("thead",null,[n("tr",null,[n("th",null,"Name"),n("th",null,"Type"),n("th",null,"Required"),n("th",null,"Default"),n("th",null,"Description")])],-1),v=n("td",null,"columns",-1),x=n("code",null,"LxrColumn[]",-1),q=n("td",null,"yes",-1),_=n("td",null,null,-1),C=n("td",null,"table column definition",-1),R=n("tr",null,[n("td",null,"rows"),n("td",null,[n("code",null,"any[]")]),n("td",null,"yes"),n("td"),n("td",null,"table rows")],-1),T=n("tr",null,[n("td",null,"sort"),n("td",null,[n("code",null,"null | Record<string, boolean>")]),n("td",null,"no"),n("td"),n("td",null,"Sorting key")],-1),L=n("tr",null,[n("td",null,"threshold"),n("td",null,[n("code",null,"string | number")]),n("td",null,"no"),n("td"),n("td",null,'The threshold distance from the bottom of the content to call the infinite output event when scrolled. Value can be a number (pixels, from bottom) or string (in "px" or "%"). Defaults to "15%".')],-1),j=n("tr",null,[n("td",null,"fetchMoreCallback"),n("td",null,[n("code",null,"() => Promise<void>")]),n("td",null,"no"),n("td"),n("td",null,"Optional callback that gets triggered when user scrolls below the defined threshold level.")],-1),N=n("tr",null,[n("td",null,"tableClasses"),n("td",null,[n("code",null,"string")]),n("td",null,"no"),n("td"),n("td",null,"Optional css classes to be applied to the table element.")],-1),S=n("tr",null,[n("td",null,"rowClasses"),n("td",null,[n("code",null,"string")]),n("td",null,"no"),n("td"),n("td",null,"Optional css classes to be applied to all table rows.")],-1),A=t('<h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><table><thead><tr><th>Name</th><th>Callback</th><th>Description</th></tr></thead><tbody><tr><td>sort</td><td><code>(null | Record&lt;string, boolean&gt;) =&gt; void</code></td><td>Triggered on user UI interaction with column sort controls. Callback argument is either null (sorting disabled) or object having as key the sorting key and value a boolean refering the sorting direction (asc).</td></tr></tbody></table><h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>loading-indicator</td><td>Loading spinner for <code>fetchMoreCallback</code></td></tr></tbody></table><h2 id="types" tabindex="-1"><a class="header-anchor" href="#types" aria-hidden="true">#</a> Types</h2><h3 id="lxrcolumn" tabindex="-1"><a class="header-anchor" href="#lxrcolumn" aria-hidden="true">#</a> LxrColumn</h3><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>key</td><td><code>string</code></td><td>yes</td><td></td><td>column key</td></tr><tr><td>label</td><td><code>string</code></td><td>yes</td><td></td><td>column header label</td></tr><tr><td>align</td><td><code>&#39;left&#39; | &#39;right&#39; | &#39;center&#39;</code></td><td>no</td><td><code>&#39;left&#39;</code></td><td>Cell content alignment</td></tr><tr><td>sortable</td><td><code>boolean</code></td><td>no</td><td><code>false</code></td><td>Sets column as sortable</td></tr><tr><td>headerClasses</td><td><code>string</code></td><td>no</td><td></td><td>Classes applied to column header</td></tr><tr><td>cellClasses</td><td><code>string</code></td><td>no</td><td></td><td>Custom component to be shown as column cells</td></tr><tr><td>component</td><td><code>Component</code></td><td>no</td><td></td><td>Optional css classes to be applied to all table rows</td></tr><tr><td>extraProps</td><td><code>() =&gt; Object</code></td><td>no</td><td></td><td>Extra properties to be passed to the custom component</td></tr></tbody></table>',7);function D(E,B){const e=s("lxr-table-example-1"),o=s("lxr-table-example-2"),l=s("lxr-table-example-3"),c=s("RouterLink");return u(),k(b,null,[m,g,a(e,{class:"py-8"}),y,a(o,{class:"py-8"}),h,a(l,{class:"py-8"}),w,n("table",null,[f,n("tbody",null,[n("tr",null,[v,n("td",null,[a(c,{to:"/components/lxr-table.html#lxrcolumn"},{default:i(()=>[x]),_:1})]),q,_,C]),R,T,L,j,N,S])]),A],64)}var P=r(d,[["render",D],["__file","lxr-table.html.vue"]]);export{P as default};
